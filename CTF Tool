import tkinter as tk
from tkinter import *
import tkinter.messagebox
from tkinter import messagebox
from tkinter import simpledialog
import PyPDF2
from time import sleep
from tkinter import ttk
from sys import exit
import socket
import subprocess
import sys




def port_scanner():
    master=tk.Tk()
    master.withdraw()
    global Host
    ip_a = simpledialog.askstring(title="Host", prompt="What is the host that will be scanned?")
    Host = ip_a

def scanner():
    remoteServerIP = socket.gethostbyname(Host)
    global port_scanning_results
    port_scanning_results=[]
    try:
        for port in range(1,1025):
            sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            result = sock.connect_ex((remoteServerIP, port))
            if result == 0:
                port_scanning_results += ["Port {}:     Open".format(port)]
            sock.close()
    except KeyboardInterrupt:
        print("You pressed Ctrl+C")
        sys.exit()
    except socket.gaierror:
        print("Hostname could not be resolved. Exiting")
        sys.exit()
    except socket.error:
        print("Couldn't connect to server")
        sys.exit()

##def button_command():
##    popup=tk.Toplevel()
##    tk.Label(popup, text="Ports are being scanned.").grid(row=0,column=0)

##    progress=0
##    progress_var=tk.DoubleVar()
##    progress_bar=ttk.Progressbar(popup,variable=progress_var, maximum=100)
##    progress_bar.grid(row=1, column=0)
##    popup.pack_slaves()

##    progress_step = float(100.0/len(teams))
##    for team in teams:
##        popup.update()
##        sleep(5)
##        progress += progress_step
##        progress_var.set(progress)

##    return 0

#root=tk.Tk()
#tk.Button(root, text="Launch", command=button_command).pack()

#root.mainloop()
results=range(5)

def confirmation():
    root=Tk()
    result=tkinter.messagebox.askquestion('Text','Do you want to export this to text file?')
    if result == 'yes':
        popup=tk.Toplevel()
        tk.Label(popup, text="Creating text file with results.").grid(row=0,column=0)
        progress=0
        progress_var=tk.DoubleVar()
        progress_bar=ttk.Progressbar(popup,variable=progress_var, maximum=100)
        progress_bar.grid(row=1, column=0)
        popup.pack_slaves()
        progress_step = float(100.0/len(results))
        f=open("CTF_Tool_Results.txt","w+")
        for result in results:
            f.write("This is where the results would go")
            popup.update()
            sleep(1)
            progress += progress_step
            progress_var.set(progress)
        f.close()
        root.destroy()
        exit()
    else:
        root.destroy()
    root.mainloop()

def scanner_confirmation():
    root=Tk()
    result=tkinter.messagebox.askquestion('Text','Do you want to export this to text file?')
    if result == 'yes':
        popup=tk.Toplevel()
        tk.Label(popup, text="Creating text file with results.").grid(row=0,column=0)
        progress=0
        progress_var=tk.DoubleVar()
        progress_bar=ttk.Progressbar(popup,variable=progress_var, maximum=100)
        progress_bar.grid(row=1, column=0)
        popup.pack_slaves()
        progress_step = float(100.0/len(port_scanning_results))
        with open('Scanning_Results','w') as filehandle:
            for port_scan in port_scanning_results:
                filehandle.write('%s\n' % port_scan)
                popup.update()
                sleep(1)
                progress += progress_step
                progress_var.set(progress)
        root.destroy()
        exit()
    else:
        root.destroy()
    root.mainloop()

##// Commiting out a lot of the stuff I used for practice //**
def pick_box():
    root = Tk()

    def choice_box(a):
        global pick
        pick = a
        messagebox.showinfo("!","Loading "+pick+" tool")
        root.destroy()
    root.title("CTF")
    choices = ['Port Scanner','PDF Reader','Cipher']
    variable = StringVar(root)
    variable.set('Port Scanner')
    w =OptionMenu(root, variable, *choices, command=choice_box)
    w.pack()
    mainloop()

def pdf_reader():
    master=tk.Tk()
    master.withdraw()
    input = simpledialog.askstring(title="PDF Name", prompt="What PDF do you want to pull the Text from?")
    pdfFileObj = open(f'{input}','rb')
    pdfReader = PyPDF2.PdfFileReader(pdfFileObj)
    print(pdfReader.numPages)
    pageObj = pdfReader.getPage(0)
    global pdf_message
    pdf_message=(pageObj.extractText())


pick_box()
if pick == 'Port Scanner':
    port_scanner()
    scanner()
    print(port_scanning_results)
    scanner_confirmation()
    exit()
elif pick == 'PDF Reader':
    pdf_reader()
    confirmation()
    exit()
elif pick == 'cipher':
    print('error')
    exit()
